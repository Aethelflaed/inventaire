{
   "_id": "_design/reports",
   "language": "coffeescript",
   "views": {
       "visits": {
           "map": "(doc)->\n  emit(doc.user.fingerPrint, 1)",
           "reduce": "_sum"
       },
       "sessionTimes": {
           "map": "(doc)->\n  if doc.time?.sessionTimeSec?\n    time = Number(doc.time.sessionTimeSec)\n    if time > 0\n      emit([doc.user.id, doc.user.fingerPrint, doc._id], Math.floor(time))",
           "reduce": "_sum"
       },
       "firstLoadTime": {
           "map": "(doc)->\n  time = Number(doc.time.firstLoadTime)\n  if typeof time is 'number'\n    emit doc.user.fingerPrint, time\n  else\n    emit doc.user.fingerPrint, -1",
           "reduce": "(keys, values, rereduce)->\n  sum(values) / values.length"
       },
       "averageFirstLoadTime": {
           "map": "(doc)->\n  emit doc.user.fingerPrint, Number(doc.time.firstLoadTime)"
       },
       "timePerPage": {
           "map": "(doc)->\n  doc.navigation.forEach (page)->\n    time = page.time or 0\n    emit page.page, Number(time)",
           "reduce": "(keys, values, rereduce)->\n  sum(values) / values.length"
       },
       "pageViews": {
           "map": "(doc)->\n  day = new Date(Number(doc.time.first)).toISOString().split('T')[0]\n  doc.navigation.forEach (page)->\n    emit [day, page.page], 1",
           "reduce": "_count"
       }
   }
}